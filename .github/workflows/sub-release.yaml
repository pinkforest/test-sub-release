name: RustConnectorRelease

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Connector'
        type: choice
        options:
          - http
          - mqtt
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          path: repo
      - name: Set Environment ${{ github.event.inputs.name }}
        shell: bash
        run: |
          echo "TAG_VERSION=`grep -m 1 -oP 'version\s*=\s*\"\K\d+\.\d+\.\d+(?=\")' repo/rust-connectors/sources/${{ github.event.inputs.name }}/Cargo.toml`" | tee -a $GITHUB_ENV
      - name: Print Environment
        run: |
          echo "TAG_VERSION = ${{ env.TAG_VERSION }}"
      - name: Tar
        run: |
          tar --directory=repo/rust-connectors/sources/${{ github.event.inputs.name }} -zcvf release-src.tar.gz ./
      - name: Ls
        run: |
          ls -laR ./
      - name: Release 
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.TAG_VERSION }}-${{ github.event.inputs.name }}
          draft: false
          prerelease: false
          target_commitish: 4b825dc642cb6eb9a060e54bf8d69288fbee4904
          removeArtifacts: true
          allowUpdates: true
          generateReleaseNotes: true
          artifacts: "./release-src.tar.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Release
#        uses: actions/create-release@v1
#        id: create_release
#        with:
#          draft: false
#          prerelease: false
#          release_name: v${{ env.TAG_VERSION }}-${{ github.event.inputs.name }}
#          tag_name: v${{ env.TAG_VERSION }}-${{ github.event.inputs.name }} 
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
      - name: Upload Connector Source
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-src.tar.gz
          asset_name: fluvio-connect-${{ github.event.inputs.name }}-src.tar.gz
          asset_content_type: application/gzip
#     - name: Create GitHub release
#       id: release
#       uses: softprops/action-gh-release@v1
#       with:
#         tag_name: v${{ env.TAG_VERSION }}-${{ github.event.inputs.name }}
#         name: v${{ env.TAG_VERSION }}-${{ github.event.inputs.name }}
#         files: |
#          rust-connectors/sources/${{ github.event.inputs.name }}/
# see; https://github.com/actions/upload-release-asset - prefer automated pulls
#     - name: Upload Release Asset
#       id: upload-release-asset 
#       uses: actions/upload-release-asset@v1
